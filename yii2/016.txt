
14. Корзина. часть1.
15. Корзина. часть2.
16. Корзина. часть3.
17. Корзина. часть4.
18. Корзина. часть5.
	Добавление товара в корзину происходит без перезагрузки страницы с помощью AJAX.
	Для хранении корзины будем использовать сессии (это распространенный вариант).
	
	В файлах вида 	'views/category/index.php'
					'views/category/view.php'
								делаем кнопку добавить товар рабочей. Ссылка будет вести на контроллер  cart   и  его метод  add 
			<a href="<?= \yii\helpers\Url::to(['cart/add', 'id' => $hit->id]) ?>" data-id="<?= $hit->id ?>" class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>
			
	В основной шаблон сайта   'views/layouts/main.php '   внизу после блока   <footer>  вписываем код модального окна. 
										
					<?php
						\yii\bootstrap\Modal::begin([
							'header' => '<h2>Ваша корзина</h2>',
							'id' => 'cart',
							'size' => 'modal-lg',
							'footer' => '<button type="button" class="btn btn-default" data-dismiss="modal">Продолжить покупки</button>
								<a href="' . \yii\helpers\Url::to(['cart/view']) . '" class="btn btn-success">Оформить заказ</a> 
								<button type="button" class="btn btn-danger" onclick="clearCart()">Очистить корзину</button>'
						]);

						\yii\bootstrap\Modal::end();
					?>

					
					
	В основной файл скриптов  'web/js/main.js'  вписываем 
					
						function showCart(cart) {
							$('#cart .modal-body').html(cart);
							$('#cart').modal();
						}

						function getCart() {
							$.ajax({
								url: '/cart/show',
								type: 'GET',
								success: function(res) {
									// если переменная res  пустая строка, то всплывет сообщение об ошибке.
									if (!res) alert('Ошибка!');
									showCart(res);
								},
								error: function() {
									alert('Error!');
								}
							})
							return false;
						}

						// Корзина формируется динамически после клика. К динамическим элементам мы должны обращаться через делегирование событий
						$('#cart .modal-body').on('click', '.del-item', function() {
							var id = $(this).data('id');
							$.ajax({
								url: '/cart/del-item',
								data: {id: id},
								type: 'GET',
								success: function(res) {
									if (!res) alert('Ошибка!');
									showCart(res);
								},
								error: function() {
									alert('Error!');
								}
							})
						});

						function clearCart() {
							$.ajax({
								url: '/cart/clear',
								type: 'GET',
								success: function(res) {
									// если переменная res  пустая строка, то всплывет сообщение об ошибке.
									if (!res) alert('Ошибка!');
									showCart(res);
								},
								error: function() {
									alert('Error!');
								}
							})
						}

						$('.add-to-cart').on('click', function (e) {
							e.preventDefault();
							var id = $(this).data('id'),
								qty = $('#qty').val();
							$.ajax({
								url: '/cart/add',
								data: {id: id, qty: qty},
								type: 'GET',
								success: function(res) {
										// если переменная res  пустая строка, то всплывет сообщение об ошибке.
									if (!res) alert('Ошибка!');
									// console.log(res);
									showCart(res);
								},
								error: function() {
									alert('Error!');
								}
							})
						});

					
					
			
	Создаем контроллер   'CartController.php'
				<?php

				namespace app\controllers;
				use app\models\Product;
				use app\models\Cart;
				use Yii;


				class CartController extends AppController
				{
					public function actionAdd()
					{
							// получаем id  товара
						$id = Yii::$app->request->get('id');
							// получаем количество
						$qty = (int)Yii::$app->request->get('qty');
						$qty = !$qty ? 1 : $qty;
							// Отладочная печать. Проверяем, что $id имеется.
				//        debug($id);
							// Получаем товар по его  id
						$product = Product::findOne($id);
							// Если товара с таким id  нет в БД, то завершаем.
						if (empty($product)) return false;
							// Отладочная печать.
				//        debug($product);
						$session = Yii::$app->session;
							// Открытие сессии
						$session->open();
							// Создаем объект нашей модели
						$cart = new Cart();
						$cart->addToCart($product, $qty);
							// Отладочная печать корзины товаров
				//        debug($session['cart']);
				//        debug($session['cart.qty']);
				//        debug($session['cart.sum']);

							// Если мы получаем данные не методом Ajax, то мы делаем редирект на страницу с которой пришел пользователь.
							// то есть получится, что даже если не сработает Ajax, то сработает код выше (товар положится в корзину) и пользователь вернется на страницу с которой пришел
						if (!Yii::$app->request->isAjax) {
							return $this->redirect(Yii::$app->request->referrer);
						}
							// Выставим параметр в  false,  чтобы шаблон не попадал в отображение (хотим выводить просто таблицу)
						$this->layout = false;
							// Рендерим вид и передаем в него нашу переменную с сохраненной в нем сессией
						return $this->render('cart-modal', compact('session'));
					}

					public function actionClear()
					{
						$session = Yii::$app->session;
						$session->open();
						$session->remove('cart');
						$session->remove('cart.qty');
						$session->remove('cart.sum');
						$this->layout = false;
						return $this->render('cart-modal', compact('session'));
					}

					public function actionDelItem()
					{
						$id = Yii::$app->request->get('id');
						$session = Yii::$app->session;
						$session->open();
							// Новый объект модели и ее метод рекалькуляция (пересчет)
						$cart = new Cart();
						$cart->recal($id);
						$this->layout = false;
						return $this->render('cart-modal', compact('session'));
					}

					public function actionShow()
					{
						$id = Yii::$app->request->get('id');
						$session = Yii::$app->session;
						$session->open();
						$this->layout = false;
						return $this->render('cart-modal', compact('session'));
					}

					public function actionView()
					{
						return $this->render('view');
					}
				}

			
	И создаем модель  Cart.php
				<?php

				namespace app\models;

				use yii\db\ActiveRecord;

				class Cart extends ActiveRecord
				{
					public function addToCart($product, $qty = 1)
					{
							// Если товар есть в корзине, то добавляем количество  $qty
						if (isset($_SESSION['cart'][$product->id])) {
								// Обращаемся к свойству массива и увеличиваем его значение на количество  $qty  заданное пользователем
							$_SESSION['cart'][$product->id]['qty'] += $qty;
						} else {
								// Если товара в корзине еще нет, то мы его добавляем в массив корзины
							$_SESSION['cart'][$product->id] = [
								'qty' => $qty,
								'name' => $product->name,
								'price' => $product->price,
								'img' => $product->img
							];
						}
							// В сессии кроме массивов товаров будут еще 2 значения  $qty - кол-во товаров   и  $sum  общая сумма.
							// Если в сесии есть   cart.qty  то   cart.qty увеличиваем  на  $qty , а если создается первый товар, то просто кладем это количество
						$_SESSION['cart.qty'] = isset($_SESSION['cart.qty']) ? $_SESSION['cart.qty'] + $qty : $qty;
						$_SESSION['cart.sum'] = isset($_SESSION['cart.sum']) ? $_SESSION['cart.sum'] + $qty * $product->price : $qty * $product->price;
					}

					public function recal($id)
					{
							// проверка на существование
						if (!isset($_SESSION['cart'][$id])) return false;
						$qtyMinus = $_SESSION['cart'][$id]['qty'];
						$sumMinus = $_SESSION['cart'][$id]['qty'] * $_SESSION['cart'][$id]['price'];
						$_SESSION['cart.qty'] -= $qtyMinus;
						$_SESSION['cart.sum'] -= $sumMinus;
						unset($_SESSION['cart'][$id]);
					}
				}
			
	Создаем вид  'views/cart/cart-modal.php'
				<!--        Если массив пустой то выведем  "Корзина пуста", если нет то формируем таблицу (для простоты из  bootstrap)-->
				<?php if (!empty($session['cart'])) :  ?>
					<div class="table-responsive">
						<table class="table table-hover table-striped" >
							<thead>
								<tr>
									<th>Фото</th>
									<th>Наименование</th>
									<th>Количество</th>
									<th>Цена</th>
									<th><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></th>
								</tr>
							</thead>
							<tbody>
								<?php foreach ($session['cart'] as $id => $item) : ?>
									<tr>
										<td><?= \yii\helpers\Html::img("@web/images/products/{$item['img']}", ['alt' => $item['name'], 'height' => 50]) ?></td>
				<!--                        <td>--><?//= $item['img'] ?><!--</td>    За место вывода картинки товара временно был вывод названия                          -->
										<td><?= $item['name'] ?></td>
										<td><?= $item['qty'] ?></td>
										<td><?= $item['price'] ?></td>
										<td><span data-id="<?= $id ?>" class="glyphicon glyphicon-remove text-danger del-item" aria-hidden="true"></span></td>
									</tr>
								<?php endforeach; ?>
									<tr>
										<td colspan="4">Итого: </td>
										<td><?= $session['cart.qty'] ?></td>
									</tr>
									<tr>
										<td colspan="4">На сумму: </td>
										<td><?= $session['cart.sum'] ?></td>
									</tr>
							</tbody>
						</table>
					</div>
				<?php else : ?>
					<h3>Корзина пуста</h3>
				<?php endif; ?>
	
	
	