
06 Виды и Шаблоны
	Находятся в views/layouts/    по умолчанию имеется  main.php
	
	Имеется неизменяемая часть - это шаблон и в него подключается изменяемая - это вид.
	
	В каталоге layouts/   можем создать сколько угодно шаблонов. например basic.php
	
Подключение (глобальный способ)
	/config/web.php 	в настройке  $config = [ ... , 'layout' => basic, ...]  и для всего сайта это станет базовым шаблоном
	
Подключение внутри контроллера
		где описание класса контролера объявляем переменную с названием шаблона
		 тогда будет для определенного контролера 
					    public $layout = 'basic';
						
	Можно задать для отдельного экшена в каком либо котолере
						    public function actionShow()
							{
								$this->layout = 'basic';
								
								return $this->render('show');
							}
						
	Таким образом можно установить шаблон на весть сайт, на определенный раздел или на отдельные страницы.
	
		
Подключение всех нужных скриптов для шаблона происходит 
	в каталоге assets/AppAssets.php	 	чтобы они применились 
	
	Например создаем каталог web/js/scripts.js c таким содержимым
									alert('Hello'); 
	Создаем web/js/style.css  
		в каталоге assets/AppAssets.php	 	чтобы они применились в массив добавляем значения
								public $css = [
									'css/site.css',
									'css/style.css'
								];
								public $js = [
									'js/scripts.js'
								];
								
								public $depends = [						
									'yii\web\YiiAsset',
									'yii\bootstrap\BootstrapAsset'
								]
								
			// В публичном свойстве $depends  указываем от каких скриптов зависит наше приложение. 
			// тогда yii проследит, чтобы они были подключены.
								
						
								
	При этом если у нас свой шаблон, то в нем должны быть метки и подключенные файлы. Например	
						use app\assets\AppAsset;
						AppAsset::register($this);
						.........
						 <?php $this->head() ?>
						.........
						   <?= $content ?>
						............
						<?php $this->endBody() ?>
						........
						<?php $this->endPage() ?>    // и другие метки это просто пример
						
						
						
07 Подключение скриптов и стилей
		В наш новый файл шаблона можем добавить меню. Фрагмент кода ниже в файле   /views/layouts/basic.php
		 Также будем использовать хелпер
		
							use yii\helpers\Html;
							
							................................
				
						    <?php $this->beginBody() ?>
								<div class="wrap">
									<div class="container">
										
										<ul class="nav nav-pills">
											<li role="presentation" class="active"><?= Html::a('Главная', '/web/') ?></li>
											<li role="presentation"><?= Html::a('Статьи', ['post/index']) ?></li>
											<li role="presentation"><?= Html::a('Статьи', ['post/show']) ?></li>
										</ul>

										<?= $content ?>
										
									</div>
								</div>
							<?php $this->endBody() ?>


		
		Для генерирования ссылок в  Yii  есть спец хелпер. Он подключается в начале файла шаблона   use yii\helpers\Html;  
		 и теперь заместо жестких ссылок    <?= Html::a('Статьи', ['post/index']) ?>    Текст ссылки и куда ведет 
		
	
	Ранее мы подключали  скрипты в файле 'assets/AppAssets'   но мы можем создать уникальный класс, в нем подключать уникальные скрипты.
	
	По умолчанию скрипты подключаются внизу в блоке футер перед закрывающим тегом боди. 
	 Но можем в файле 'assets\AppAsset'   прописать (например в   head)
							    public $jsOptions = [
									'position' => \yii\web\View::POS_HEAD
								];
	 
	 
		Также в файле есть allias пути   public $baseUrl = '@web';
	 
	Файлы можно подключать не только ГЛОБАЛЬНО через 'assets/AppAssets'  но и прямо в видах.
	 для примера в файле AppAssets  закомментим    
								    public $js = [
								//        'js/scripts.js'
									];
			
	А в файле вида    'yii.loc\views\post\show.php'   пропишем подключение скрипта 
									<h1>Show Action</h1>
									<?php $this->registerJsFile('@web/js/scripts.js', ['depends' => 'yii\web\YiiAsset']) ?>
	И теперь именно на этой странице будет будет  подключено диалоговое окно.
		@web  это псевдоним   	'C:\OpenServer\domains\yii.loc\web'
	
	Можно регистрировать не целый файл, а некоторый блок JS кода 
								<?php $this->rejisterJs("") ?>
								
	Такие же методы имеются для  css  файлов
				registerCss() 
				registerCssFile()
	Например в виде прописываем
						<?php $this->registerCss('.container{background: #ccc;}');
						
						
								
			






























	






	
			
	