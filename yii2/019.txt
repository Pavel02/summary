
22. Авторизация. Часть1.
	В теорет части курса есть пример реализации админки через создание контролера и экшена.
	 Но так мало кто делает. В основном применяют модульную админку. 
	 Фактически это приложение в приложении. В кталоге  'modules'  можем создавать полный аналог мини приложения 
		Автор для ускорения стал применять генератор кода  'http://yii2.loc/gii/module' 
		 Там создается модуль.
	Его надо указать в   '/config/web.php'   
										'modules' => [
											'admin' => [
												'class' => 'app\modules\admin\Module',
											],
										],
	
	То что пользователь называет авторизацией, это для программиста 2 связанных действия.
		Аутентификация (процесс залогивания пользователя (сверка логин пароли и т.д.)) 
		 и Авторизация (проверка достаточно ли у пользователя прав для просмотра страницы).
		  
	Мы будем дорабатывать уже имеющийся класс для авторизации  '/models/User.php' , но можем создать
	 и новый (при новом будем указывать implements \yii\web\IdentityInterface )
	 
	Также в БД создаем новую таблицу 
					Структура таблицы `user`
					--
					CREATE TABLE IF NOT EXISTS `user` (
					  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
					  `username` varchar(255) NOT NULL,
					  `password` varchar(255) NOT NULL,
					  `auth_key` varchar(255) DEFAULT NULL,
					  PRIMARY KEY (`id`)
					) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
  
	Также следует знать, что в Yii есть уже 2 псевдо роли. 
	 Гость (алиас  ?) и Зарегистрированный пользователь (алиас  @)
	 	Вообще в боевом приложении будет минимум 3 роли +Админ. 
		
	в онсновном шаблоне  '/views/layouts/main.php '  делаем ссылку на адмику 
				<li><a href="<?= \yii\helpers\Url::to('/admin') ?>"><i class="fa fa-lock"></i> Login</a></li>
				
	Создаем общий контроллер с общей логикой    '\modules\admin\controllers\AppAdminController.php'  
	
  
  
23. Авторизация. Часть2.
	 
	 
	 
	 
	 
	 
	  
			