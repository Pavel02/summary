	Анатомия Bootstrap 3 для начинающих.
	https://www.youtube.com/playlist?list=PLvWwA9iDlhHDZD_V0SUnO-wiN3FpZOy2P
	https://www.youtube.com/watch?v=9N88P_CMQh0&list=PLvWwA9iDlhHDZD_V0SUnO-wiN3FpZOy2P&index=2
	
	канал 
	https://www.youtube.com/channel/UCt36CWL85NGtOgUMZ2X6x5g
	
	
01	
	По сути bootstrap это набор файлов  css js, 
	Когда имеет смысл применять bootstrap: 
		- Прототипирование. Для этого часто используеются онлайн и офлайн ресурсы и программы,
			визуальные редакторы, но bootstrap может из статики все превратить в динамику, 
			а код можно будет использовать в дальнейгем при разработке проектов.
		- Нет сверх требований к дизайну и производительности. bootstrap это комбайн на все случаи жизни,
			если использовать стандартную сборку, то большинство содержимого не понадобится.
		
	Могут иметься проблемы с версткой макета под ключ (окончательного), так как имеются 
		неудобства с переопределением стилей. И если сложный шаблон, то из стандартных стилей 
		почти ничего не используется, а у финального кода будет множество 
		переопределений и импотант правил (что является ужасной практикой).
		В таком случае можно брать сетку бутстрап, адаптивное меню, может быть еще слайдер, 
		 а остальное верстается классически.
		
	Рекомендуется изучать как устроен bootstrap так как над ним трудятся лучшие разработчики со всего мира, 
	 и в нем реализованы лучшие практики.
	 

02
	С офф сайта скачивается архив с последней свежей версией.
		http://getbootstrap.com/getting-started/
	
	В каталоге 'css'  то что помечено просто 'bootstrap'  это основной файл со стилями фреймворка, 
	 а то, что 'bootstrap-theme'  это файлы темы, которая меняет стандартный вид  bootstrap. 
	 
	Файл  '.min.css'  для работы на сервер (весь код в одну строчку).
		В читабелный вид можно привести на сайте: 
					http://www.cleancss.com/css-beautify/
					
	Файл для препроцессоров  '.css.map'  .
	
	В каталоге 'fonts'  находятся  глиф-иконки.  По сути там файлы со шрифтами 
	 в 5 самых распространненых в вебе формате. 
	 Шрифты векторные объекты, можем их массштабировать на любую величину без потери качества.
	 А через css мы можем менять им цвет и прочие свойства.
	
	В head подключаем скрипты стилей 	<link rel="stylesheet" href="css/bootstrap.min.css">  
	Скрипты с JS для лучшей производительности подключаем перед закрывающим   </body>  
	 Нужна  jquery   подключаем через  CDN сервис   					https://cdnjs.com
			https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js		это ссылка на пока что самый свежий jquery 
	Файл js bootstrap  подключаем после jquery.
										<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
										<script src="js/bootstrap.min.js"></script>
										</body>
	
03 
	По умолчанию в bootstrap  сетка из 12 колонок (это можно изменить, если пересобрать фреймворк).
	
	Первый элемент это контейнер .container - по сути любой блок, включающий другие блоки.
	Контейнер содержит внутри себя строки  .row  
	А внутри строк содержатся колонки   .col  
	
	Как правило bootstrap классы применяют к блок  <div>  но можно и к <article> <section> <aside> даже  <span class="container"> просто <span> не  будет себя вести как блочный элемент.
	
					
	.container      Центруется по середине экрана, меняет размер в зависимости от окна браузера.
	.container-fluid		Растягивается на весь экран. но задает padding c краев по 15px, чтобы текст не прилипал к экрану.	
		Вообще по  умолчанию блочные элементы, растягиваются на всю ширину родителя, получается что они по дефолту резиновые.
		
	По логике bootstrap  внутри  .container    идет   строка   .row  

	А внутри нее колонки составной класс    .col  
		lg, large  - большой , десктоп
		md, middle  - средний,  планшеты
		sm, small   - смартфоны
		xs, extra small  - очень маленький  ,  мобильные устройства с очень маленьким экранам.
		
	Создадим 12 колонок внутри  .container 
			.col-lg-1.bs-col{Колонка $}*12   + tab    ->   создаст 12 колонок 
		
		Класс   .col-lg-1   Отвечает за создание колонки шириной в 12 часть от ширины родителя (ширина таких колонок создается в процентах).
		
		И зададим стили   	.bs-col {
								height: 100vh;
							}

							.bs-col:nth-child(odd) {
								background-color: bisque;
							}

							.bs-col:nth-child(even) {
								background-color: coral;
							}
		Тогда в браузере увидим 12 чередующихся колонок. Сетка.
	
		Все колонки  .col  флоатятся влево  (если будет более 12 частей, то непоместившаяся просто удет вниз). 
	
	Зачем  .row  ,если  колонки .col	и так уже работают внутри  контейнера .container .
	Дело в том что у .container   внутренние отступы по 15px и у  .col по15pх  Итого уже  по  30px  с каждой стороны.
	А у  .row  отступы отрицательные   -15px. Таким образом сьрасываются паддинги контейнера в 0. 
	
		
		
	Подробнее про адаптивную сетку bootstrap
			http://getbootstrap.com/css/
					 
		
04		 
	Класс   
	.offset  позволяет нам смещать колонки 
		<div class="col-md-3 col-md-offset-9> правый сайд бар </div>		Означает, что блок шириной 3 колонки смещен вправо на 9 колонок. Сайдбар будет прижат вправо. 
		
	Задаваться может для определенных ширин экрана. 
	Работает это смещение благодаря тому что блоку задается   margin-left   в процентах \
	
	
	Класс 
	.push  смещает блок на право (позиционирование абсолютное )
		.col-md-push-5     Смещает блок на право на 5 колонок.
	
	Класс 
	.pull 
		.col-lg-3 .col-lg-pull-9		Смещает блок влево на 9 колонок (Здесь например правый сайдбар будет на больши экранах слева располагаться)
	
	По умолчанию  в bootstrap  position: relative;   и классы ..push  .pull   просто смещают блоки свойствами   right   и  left 
	
				
	При верстке  bootstrap  подразумевается, что вначале будет верстаться под мобилку и постепенно увеличивать под декстоп.
	
	Рекомендация практиковать. Например  по запросу   
		'free responsive psd templates' вылазят много сайтов 
				например 	http://pixel2pixeldesign.com/30-free-responsive-psd-website-templates/
		
		
		
 
		